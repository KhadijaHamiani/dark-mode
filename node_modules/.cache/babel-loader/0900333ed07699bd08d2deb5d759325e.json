{"ast":null,"code":"var _jsxFileName = \"D:\\\\TESTS\\\\dark-mode\\\\dark-mode\\\\src\\\\common\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/React.createContext('theme');\n\nconst App = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [theme, setTheme] = useState('light');\n\n  const onChangeTheme = theme => setTheme(theme);\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      onChangeTheme,\n      theme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/TESTS/dark-mode/dark-mode/src/common/containers/App.js"],"names":["React","useState","Context","createContext","App","children","theme","setTheme","onChangeTheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,OAAO,gBAAGF,KAAK,CAACG,aAAN,CAAoB,OAApB,CAAhB;;AAEP,MAAMC,GAAG,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMO,aAAa,GAAIF,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAAzC;;AAEA,sBACE,QAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,aADK;AAELF,MAAAA;AAFK,KADT;AAAA,cAMGD;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAdD;;GAAMD,G;;KAAAA,G;AAgBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nexport const Context = React.createContext('theme');\n\nconst App = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n  const onChangeTheme = (theme) => setTheme(theme);\n\n  return (\n    <Context.Provider\n      value={{\n        onChangeTheme,\n        theme,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}